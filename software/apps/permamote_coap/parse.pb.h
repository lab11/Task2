/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.3 at Wed Nov  6 14:57:22 2019. */

#ifndef PB_PARSE_PB_H_INCLUDED
#define PB_PARSE_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _ColorCounts {
    uint32_t red;
    uint32_t green;
    uint32_t blue;
    uint32_t clear;
/* @@protoc_insertion_point(struct:ColorCounts) */
} ColorCounts;

typedef PB_BYTES_ARRAY_T(64) Header_id_t;
typedef struct _Header {
    uint32_t version;
    Header_id_t id;
    uint32_t seq_no;
    uint64_t tv_sec;
    uint32_t tv_usec;
/* @@protoc_insertion_point(struct:Header) */
} Header;

typedef struct _SystemVoltage {
    float vbat;
    float vsol;
    float vsec;
    bool vbat_ok;
/* @@protoc_insertion_point(struct:SystemVoltage) */
} SystemVoltage;

typedef PB_BYTES_ARRAY_T(16) ThreadInfo_ext_addr_t;
typedef struct _ThreadInfo {
    uint32_t rloc16;
    ThreadInfo_ext_addr_t ext_addr;
    uint32_t parent_avg_rssi;
    uint32_t parent_last_rssi;
/* @@protoc_insertion_point(struct:ThreadInfo) */
} ThreadInfo;

typedef struct _Data {
    float temperature_c;
    float pressure_mbar;
    float humidity_percent;
    SystemVoltage voltage;
    float light_color_cct_k;
    ColorCounts light_color_counts;
    float light_lux;
    bool motion;
    char discovery[64];
    ThreadInfo thread_info;
    char version[64];
/* @@protoc_insertion_point(struct:Data) */
} Data;

typedef struct _PermamoteMessage {
    Header header;
    Data data;
/* @@protoc_insertion_point(struct:PermamoteMessage) */
} PermamoteMessage;

/* Default values for struct fields */

/* Initializer values for message structs */
#define Header_init_default                      {0, {0, {0}}, 0, 0, 0}
#define SystemVoltage_init_default               {0, 0, 0, 0}
#define ColorCounts_init_default                 {0, 0, 0, 0}
#define ThreadInfo_init_default                  {0, {0, {0}}, 0, 0}
#define Data_init_default                        {0, 0, 0, SystemVoltage_init_default, 0, ColorCounts_init_default, 0, 0, "", ThreadInfo_init_default, ""}
#define PermamoteMessage_init_default            {Header_init_default, Data_init_default}
#define Header_init_zero                         {0, {0, {0}}, 0, 0, 0}
#define SystemVoltage_init_zero                  {0, 0, 0, 0}
#define ColorCounts_init_zero                    {0, 0, 0, 0}
#define ThreadInfo_init_zero                     {0, {0, {0}}, 0, 0}
#define Data_init_zero                           {0, 0, 0, SystemVoltage_init_zero, 0, ColorCounts_init_zero, 0, 0, "", ThreadInfo_init_zero, ""}
#define PermamoteMessage_init_zero               {Header_init_zero, Data_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define ColorCounts_red_tag                      1
#define ColorCounts_green_tag                    2
#define ColorCounts_blue_tag                     3
#define ColorCounts_clear_tag                    4
#define Header_version_tag                       1
#define Header_id_tag                            2
#define Header_seq_no_tag                        3
#define Header_tv_sec_tag                        4
#define Header_tv_usec_tag                       5
#define SystemVoltage_vbat_tag                   1
#define SystemVoltage_vsol_tag                   2
#define SystemVoltage_vsec_tag                   3
#define SystemVoltage_vbat_ok_tag                4
#define ThreadInfo_rloc16_tag                    1
#define ThreadInfo_ext_addr_tag                  2
#define ThreadInfo_parent_avg_rssi_tag           3
#define ThreadInfo_parent_last_rssi_tag          4
#define Data_temperature_c_tag                   1
#define Data_pressure_mbar_tag                   2
#define Data_humidity_percent_tag                3
#define Data_voltage_tag                         4
#define Data_light_color_cct_k_tag               5
#define Data_light_color_counts_tag              6
#define Data_light_lux_tag                       7
#define Data_motion_tag                          8
#define Data_discovery_tag                       9
#define Data_thread_info_tag                     10
#define Data_version_tag                         11
#define PermamoteMessage_header_tag              1
#define PermamoteMessage_data_tag                2

/* Struct field encoding specification for nanopb */
extern const pb_field_t Header_fields[6];
extern const pb_field_t SystemVoltage_fields[5];
extern const pb_field_t ColorCounts_fields[5];
extern const pb_field_t ThreadInfo_fields[5];
extern const pb_field_t Data_fields[12];
extern const pb_field_t PermamoteMessage_fields[3];

/* Maximum encoded size of messages (where known) */
#define Header_size                              95
#define SystemVoltage_size                       17
#define ColorCounts_size                         24
#define ThreadInfo_size                          36
#define Data_size                                242
#define PermamoteMessage_size                    342

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define PARSE_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
